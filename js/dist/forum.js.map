{"version":3,"sources":["webpack://@fof/game/webpack/bootstrap","webpack://@fof/game/external \"flarum.core.compat['common/Model']\"","webpack://@fof/game/external \"flarum.core.compat['forum/app']\"","webpack://@fof/game/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/game/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/game/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/game/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/game/external \"flarum.core.compat['common/Component']\"","webpack://@fof/game/./src/lib/models/Field.js","webpack://@fof/game/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/game/external \"flarum.core.compat['common/extend']\"","webpack://@fof/game/external \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/game/external \"flarum.core.compat['common/models/User']\"","webpack://@fof/game/external \"flarum.core.compat['common/app']\"","webpack://@fof/game/external \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/game/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/game/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/game/external \"flarum.core.compat['common/components/Link']\"","webpack://@fof/game/external \"flarum.core.compat['forum/components/UserCard']\"","webpack://@fof/game/./src/lib/models/Answer.ts","webpack://@fof/game/./src/forum/types/BaseField.js","webpack://@fof/game/./src/forum/types/BooleanField.js","webpack://@fof/game/./src/forum/types/EmailField.js","webpack://@fof/game/./src/forum/types/SelectField.js","webpack://@fof/game/./src/forum/types/UrlField.js","webpack://@fof/game/./src/forum/types/PasswordField.js","webpack://@fof/game/./src/forum/types/TypeFactory.js","webpack://@fof/game/./src/forum/panes/ProfilePane.tsx","webpack://@fof/game/./src/forum/panes/ProfileConfigurePane.js","webpack://@fof/game/./src/forum/panes/RootGamePane.tsx","webpack://@fof/game/./src/forum/index.js","webpack://@fof/game/./src/forum/addProfilePane.js","webpack://@fof/game/./src/forum/mutateUserHero.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Field","Model","attribute","description","type","validation","required","prefix","icon","sort","deleted_at","transformDate","answer","hasOne","on_bio","apiEndpoint","this","exists","data","id","Answer","content","fieldId","field","computed","app","store","getById","userId","BaseField","set","readAttribute","validationRules","split","validationRule","ruleName","ruleContent","forEach","rule","editorField","class","editorInput","editorInputAttrs","className","oninput","event","target","answerField","iconName","hasAnswer","answerContent","keys","length","isNoOptionSelectedValue","BooleanField","options","map","option","checked","selected","onclick","label","push","translator","trans","indexOf","EmailField","attrs","placeholder","email","segment","replace","join","Button","component","mailTo","window","location","SelectField","Select","onchange","validationIn","UrlField","to","open","PasswordField","TypeFactory","typeForField","undefined","identify","types","fieldAttribute","boolean","select","url","password","identified","fieldType","trim","ProfilePane","answers","user","oninit","vnode","loading","load","view","all","a","b","find","gameAnswers","include","then","redraw","Component","ProfileConfigurePane","enforceProfileCompletion","forum","profileCompleted","profileNowCompleted","answerValues","dirty","onsubmit","update","disabled","href","route","e","preventDefault","request","method","body","response","parseResponse","pushPayload","RootGamePane","loadUser","param","pageContentComponent","canEditGameProfile","show","UserPage","initializers","add","models","User","bioFields","hasMany","routes","path","resolver","onmatch","Error","extend","items","edit","LinkButton","username","slug","UserCard","components"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['forum/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Component'];","import Model from 'flarum/common/Model';\r\n\r\nexport default class Field extends Model {\r\n  name = Model.attribute('name');\r\n  description = Model.attribute('description');\r\n  type = Model.attribute('type');\r\n  validation = Model.attribute('validation');\r\n  required = Model.attribute('required');\r\n  prefix = Model.attribute('prefix');\r\n  icon = Model.attribute('icon');\r\n  sort = Model.attribute('sort');\r\n  deleted_at = Model.attribute('deleted_at', Model.transformDate);\r\n  answer = Model.hasOne('answer');\r\n  on_bio = Model.attribute('on_bio');\r\n\r\n  apiEndpoint() {\r\n    return '/game/fields' + (this.exists ? '/' + this.data.id : '');\r\n  }\r\n}\r\n","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/utils/computed'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['forum/components/UserCard'];","import app from 'flarum/common/app';\r\nimport Model from 'flarum/common/Model';\r\nimport computed from 'flarum/common/utils/computed';\r\n\r\nimport type Field from './Field';\r\n\r\nexport default class Answer extends Model {\r\n  content = Model.attribute('content');\r\n  fieldId = Model.attribute('fieldId');\r\n  field = computed<Field>('fieldId', (fieldId: string) => {\r\n    return app.store.getById('game-field', fieldId);\r\n  });\r\n  userId = Model.attribute('user_id');\r\n}\r\n","import icon from 'flarum/common/helpers/icon';\r\n\r\n/* global m */\r\n\r\nexport default class BaseField {\r\n  constructor({ field, set, value }) {\r\n    this.field = field;\r\n    this.set = set;\r\n    this.value = value;\r\n  }\r\n\r\n  readAttribute(object, attribute) {\r\n    if (typeof object[attribute] === 'function') {\r\n      return object[attribute]();\r\n    }\r\n\r\n    return object[attribute];\r\n  }\r\n\r\n  /**\r\n   * Gets all Laravel validation rules split by rule\r\n   * @returns {Array}\r\n   */\r\n  validationRules() {\r\n    return this.readAttribute(this.field, 'validation').split('|');\r\n  }\r\n\r\n  /**\r\n   * Gets a Laravel validation rule by name\r\n   * @param {string} ruleName\r\n   * @returns {string|null}\r\n   */\r\n  validationRule(ruleName) {\r\n    let ruleContent = null;\r\n\r\n    this.validationRules().forEach((rule) => {\r\n      const split = rule.split(':', 2);\r\n\r\n      if (split[0] === ruleName) {\r\n        ruleContent = split[1];\r\n      }\r\n    });\r\n\r\n    return ruleContent;\r\n  }\r\n\r\n  editorField() {\r\n    return (\r\n      <div class=\"Form-group Field\">\r\n        <label>\r\n          {this.field.icon() ? [icon(this.field.icon()), ' '] : null} {this.field.name()} {this.field.required() ? '*' : null}\r\n        </label>\r\n\r\n        <div class=\"FormField\">\r\n          {this.field.prefix() ? m('.prefix', this.field.prefix()) : null}\r\n          {this.editorInput()}\r\n          {this.field.description() ? <div class=\"helpText\">{this.field.description()}</div> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  editorInput() {\r\n    return <input {...this.editorInputAttrs()} />;\r\n  }\r\n\r\n  editorInputAttrs() {\r\n    return {\r\n      className: 'FormControl',\r\n      oninput: (event) => {\r\n        this.set(event.target.value);\r\n      },\r\n      //type: this.field.type(),\r\n      value: this.value,\r\n      required: this.field.required(),\r\n    };\r\n  }\r\n\r\n  answerField() {\r\n    const iconName = this.readAttribute(this.field, 'icon');\r\n\r\n    return (\r\n      <div className={`Game-Bio-Set${this.hasAnswer() ? '' : ' Game-Bio-Set--empty'}`}>\r\n        <span class=\"Game-Bio-Field\">\r\n          {iconName && <>{icon(iconName)} </>}\r\n          {this.readAttribute(this.field, 'name')}:{' '}\r\n        </span>\r\n        <span class=\"Game-Bio-Answer\">{this.answerContent()}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  answerContent() {\r\n    return this.value;\r\n  }\r\n\r\n  hasAnswer() {\r\n    const answerContent = this.answerContent();\r\n\r\n    if (answerContent === null) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof answerContent === 'object') {\r\n      return !!Object.keys(answerContent).length;\r\n    }\r\n\r\n    return !!answerContent?.length;\r\n  }\r\n\r\n  static isNoOptionSelectedValue(value) {\r\n    // The value can be null when coming from the API\r\n    // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\r\n    return value === null || value === '';\r\n  }\r\n}\r\n","import icon from 'flarum/common/helpers/icon';\r\nimport BaseField from './BaseField';\r\n\r\nexport default class BooleanField extends BaseField {\r\n  editorInput() {\r\n    return this.options().map((option) =>\r\n      m(\r\n        'div',\r\n        m('label', [\r\n          m('input[type=radio]', {\r\n            checked: option.selected(this.value),\r\n            onclick: () => {\r\n              this.set(option.key);\r\n            },\r\n          }),\r\n          ' ' + option.label,\r\n        ])\r\n      )\r\n    );\r\n  }\r\n\r\n  options() {\r\n    let options = [];\r\n\r\n    if (!this.readAttribute(this.field, 'required')) {\r\n      options.push({\r\n        selected: (value) => BaseField.isNoOptionSelectedValue(value),\r\n        key: null,\r\n        label: app.translator.trans('fof-game.forum.fields.select.none-optional'),\r\n      });\r\n    }\r\n\r\n    options.push({\r\n      selected: (value) => ['true', '1', 1, true, 'yes'].indexOf(value) !== -1,\r\n      key: 'true',\r\n      label: app.translator.trans('fof-game.forum.fields.boolean.yes'),\r\n    });\r\n\r\n    options.push({\r\n      selected: (value) => ['false', '0', 0, false, 'no'].indexOf(value) !== -1,\r\n      key: 'false',\r\n      label: app.translator.trans('fof-game.forum.fields.boolean.no'),\r\n    });\r\n\r\n    // This is probably overkill because it looks like the backend casts the value anyway\r\n    if (!BaseField.isNoOptionSelectedValue(this.value) && ['true', '1', 1, true, 'yes', 'false', '0', 0, false, 'no'].indexOf(this.value) === -1) {\r\n      options.push({\r\n        selected: () => true,\r\n        key: this.value,\r\n        label: '(invalid) ' + this.value,\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  answerContent() {\r\n    if (BaseField.isNoOptionSelectedValue(this.value)) {\r\n      return '';\r\n    }\r\n\r\n    return [1, '1', true, 'true', 'yes'].indexOf(this.value) !== -1\r\n      ? [icon('far fa-check-square'), ' ', app.translator.trans('fof-game.forum.fields.boolean.yes')]\r\n      : [icon('far fa-square'), ' ', app.translator.trans('fof-game.forum.fields.boolean.no')];\r\n  }\r\n}\r\n","import Button from 'flarum/common/components/Button';\r\nimport BaseField from './BaseField';\r\n\r\nexport default class EmailField extends BaseField {\r\n  editorInputAttrs() {\r\n    let attrs = super.editorInputAttrs();\r\n\r\n    attrs.type = 'email';\r\n    attrs.placeholder = 'you@example.com';\r\n\r\n    return attrs;\r\n  }\r\n\r\n  answerContent() {\r\n    const value = this.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    const email = value\r\n      .split(/@|\\./)\r\n      .map((segment) => {\r\n        return segment.replace(/(.{2})./g, '$1*');\r\n      })\r\n      .join('*');\r\n\r\n    return Button.component(\r\n      {\r\n        onclick: () => this.mailTo(),\r\n        className: 'Button Button--text',\r\n        icon: 'far fa-envelope',\r\n      },\r\n      email\r\n    );\r\n  }\r\n\r\n  mailTo() {\r\n    window.location = 'mailto:' + this.value;\r\n  }\r\n}\r\n","import Select from 'flarum/common/components/Select';\r\nimport BaseField from './BaseField';\r\n\r\nconst NO_OPTION_SELECTED_KEY = 'fof_game_no_option_selected';\r\n\r\nexport default class SelectField extends BaseField {\r\n  editorInput() {\r\n    return Select.component({\r\n      onchange: (value) => {\r\n        if (value === NO_OPTION_SELECTED_KEY) {\r\n          value = null;\r\n        }\r\n\r\n        this.set(value);\r\n      },\r\n      value: BaseField.isNoOptionSelectedValue(this.value) ? NO_OPTION_SELECTED_KEY : this.value,\r\n      options: this.options(),\r\n    });\r\n  }\r\n\r\n  options() {\r\n    let options = {};\r\n\r\n    if (!this.readAttribute(this.field, 'required')) {\r\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-game.forum.fields.select.none-optional');\r\n    } else if (BaseField.isNoOptionSelectedValue(this.value)) {\r\n      options[NO_OPTION_SELECTED_KEY] = app.translator.trans('fof-game.forum.fields.select.none-required');\r\n    }\r\n\r\n    const validationIn = this.validationRule('in');\r\n\r\n    if (validationIn) {\r\n      validationIn.split(',').forEach((value) => {\r\n        options[value] = value;\r\n      });\r\n    }\r\n\r\n    if (!BaseField.isNoOptionSelectedValue(this.value) && typeof options[this.value] === 'undefined') {\r\n      options[this.value] = '(invalid) ' + this.value;\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n","import Button from 'flarum/common/components/Button';\r\nimport BaseField from './BaseField';\r\n\r\nexport default class UrlField extends BaseField {\r\n  editorInputAttrs() {\r\n    let attrs = super.editorInputAttrs();\r\n\r\n    attrs.type = 'url';\r\n    attrs.placeholder = 'https://example.com';\r\n\r\n    return attrs;\r\n  }\r\n\r\n  answerContent() {\r\n    const value = this.value;\r\n\r\n    if (!value) {\r\n      return null;\r\n    }\r\n\r\n    return Button.component(\r\n      {\r\n        onclick: () => this.to(),\r\n        className: 'Button Button--text',\r\n        icon: 'fas fa-link',\r\n      },\r\n      value.replace(/^https?:\\/\\//, '')\r\n    );\r\n  }\r\n\r\n  to() {\r\n    const popup = window.open();\r\n    popup.location = this.value;\r\n  }\r\n}\r\n","import icon from 'flarum/common/helpers/icon';\r\n\r\n/* global m */\r\n\r\nexport default class PasswordField {\r\n  constructor({ field, set, value }) {\r\n    this.field = field;\r\n    this.set = set;\r\n    this.value = value;\r\n  }\r\n\r\n  readAttribute(object, attribute) {\r\n    if (typeof object[attribute] === 'function') {\r\n      return object[attribute]();\r\n    }\r\n\r\n    return object[attribute];\r\n  }\r\n\r\n  /**\r\n   * Gets all Laravel validation rules split by rule\r\n   * @returns {Array}\r\n   */\r\n  validationRules() {\r\n    return this.readAttribute(this.field, 'validation').split('|');\r\n  }\r\n\r\n  /**\r\n   * Gets a Laravel validation rule by name\r\n   * @param {string} ruleName\r\n   * @returns {string|null}\r\n   */\r\n  validationRule(ruleName) {\r\n    let ruleContent = null;\r\n\r\n    this.validationRules().forEach((rule) => {\r\n      const split = rule.split(':', 2);\r\n\r\n      if (split[0] === ruleName) {\r\n        ruleContent = split[1];\r\n      }\r\n    });\r\n\r\n    return ruleContent;\r\n  }\r\n\r\n  editorField() {\r\n    return (\r\n      <div class=\"Form-group Field\">\r\n        <label>\r\n          {this.field.icon() ? [icon(this.field.icon()), ' '] : null} {this.field.name()} {this.field.required() ? '*' : null}\r\n        </label>\r\n\r\n        <div class=\"FormField\">\r\n          {this.field.prefix() ? m('.prefix', this.field.prefix()) : null}\r\n          {this.editorInput()}\r\n          {this.field.description() ? <div class=\"helpText\">{this.field.description()}</div> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  editorInput() {\r\n    return <input {...this.editorInputAttrs()} />;\r\n  }\r\n\r\n  editorInputAttrs() {\r\n    return {\r\n      className: 'FormControl',\r\n      oninput: (event) => {\r\n        this.set(event.target.value);\r\n      },\r\n      type: 'password',\r\n      value: this.value,\r\n      required: this.field.required(),\r\n    };\r\n  }\r\n\r\n  answerField() {\r\n    const iconName = this.readAttribute(this.field, 'icon');\r\n\r\n    return (\r\n      <div className={`Game-Bio-Set${this.hasAnswer() ? '' : ' Game-Bio-Set--empty'}`}>\r\n        <span class=\"Game-Bio-Field\">\r\n          {iconName && <>{icon(iconName)} </>}\r\n          {this.readAttribute(this.field, 'name')}:{' '}\r\n        </span>\r\n        <span class=\"Game-Bio-Answer\">{this.answerContent()}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  answerContent() {\r\n    return this.value;\r\n  }\r\n\r\n  hasAnswer() {\r\n    const answerContent = this.answerContent();\r\n\r\n    if (answerContent === null) {\r\n      return false;\r\n    }\r\n\r\n    if (typeof answerContent === 'object') {\r\n      return !!Object.keys(answerContent).length;\r\n    }\r\n\r\n    return !!answerContent?.length;\r\n  }\r\n\r\n  static isNoOptionSelectedValue(value) {\r\n    // The value can be null when coming from the API\r\n    // The value can be '' when the field does not exist on the user (the empty string is set in ProfileConfigurePane)\r\n    return value === null || value === '';\r\n  }\r\n}\r\n","import BaseField from './BaseField';\r\nimport BooleanField from './BooleanField';\r\nimport EmailField from './EmailField';\r\nimport SelectField from './SelectField';\r\nimport UrlField from './UrlField';\r\nimport PasswordField from './PasswordField';\r\n\r\nexport default class TypeFactory {\r\n  static typeForField({ field, set = undefined, value }) {\r\n    let className = BaseField;\r\n\r\n    const type = this.identify(field);\r\n\r\n    if (type) {\r\n      className = this.types()[type];\r\n    }\r\n\r\n    return new className({\r\n      field,\r\n      set,\r\n      value,\r\n    });\r\n  }\r\n\r\n  static fieldAttribute(field, attribute) {\r\n    if (typeof field[attribute] === 'function') {\r\n      return field[attribute]();\r\n    }\r\n\r\n    return field[attribute];\r\n  }\r\n\r\n  static types() {\r\n    return {\r\n      boolean: BooleanField,\r\n      email: EmailField,\r\n      select: SelectField,\r\n      url: UrlField,\r\n      password: PasswordField,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Identifies how to parse the field answer.\r\n   * @returns {null|string}\r\n   */\r\n  static identify(field) {\r\n    const validation = (this.fieldAttribute(field, 'validation') || '').split(',');\r\n    let identified = null;\r\n\r\n    // If the field has a type we use it\r\n    const fieldType = this.fieldAttribute(field, 'type');\r\n    if (typeof this.types()[fieldType] !== 'undefined') {\r\n      return fieldType;\r\n    }\r\n\r\n    // If it's an advanced field with no type we then guess the best type\r\n    validation.forEach((rule) => {\r\n      rule = rule.trim();\r\n\r\n      if (typeof this.types()[rule] !== 'undefined') {\r\n        identified = rule;\r\n      }\r\n    });\r\n\r\n    return identified;\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\n\r\nimport Component from 'flarum/common/Component';\r\nimport TypeFactory from '../types/TypeFactory';\r\nimport type Answer from '../../lib/models/Answer';\r\nimport type Field from 'src/lib/models/Field';\r\nimport type User from 'flarum/common/models/User';\r\n\r\nexport default class ProfilePane extends Component {\r\n  answers!: Answer[];\r\n  user!: User;\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.loading = true;\r\n\r\n    this.answers = [];\r\n    this.user = this.attrs.user;\r\n\r\n    this.load(this.user);\r\n  }\r\n\r\n  view() {\r\n    return (\r\n      <div class=\"Game-Bio\">\r\n        <div class=\"Fields\">\r\n          {app.store\r\n            .all('game-field')\r\n            .sort((a, b) => a.sort() - b.sort())\r\n            .map((field) => {\r\n              const answer = this.answers.find((a) => a.field().id() === field.id());\r\n\r\n              return this.field(field, answer?.content() || '');\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  field(field: Field, content) {\r\n    const type = TypeFactory.typeForField({\r\n      field,\r\n      value: content,\r\n    });\r\n\r\n    return type.answerField();\r\n  }\r\n\r\n  load() {\r\n    this.answers = this.user.gameAnswers();\r\n\r\n    if (this.answers === false) {\r\n      this.answers = [];\r\n      app.store.find('users', this.user.id(), { include: 'gameAnswers' }).then(() => {\r\n        this.answers = this.user.gameAnswers();\r\n        m.redraw();\r\n      });\r\n    }\r\n\r\n    m.redraw();\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\n\r\nimport Button from 'flarum/common/components/Button';\r\nimport Link from 'flarum/common/components/Link';\r\nimport TypeFactory from '../types/TypeFactory';\r\nimport Component from 'flarum/common/Component';\r\n\r\nexport default class ProfileConfigurePane extends Component {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.loading = true;\r\n\r\n    this.enforceProfileCompletion = app.forum.attribute('game.force-profile-completion') || false;\r\n    this.profileCompleted = app.forum.attribute('game.profile-completed') || false;\r\n    this.profileNowCompleted = false; // Show \"after required\" text\r\n    this.answers = [];\r\n    this.answerValues = {};\r\n    this.user = this.attrs.user;\r\n    this.load();\r\n\r\n    // Show disabled state if everything is saved\r\n    // Unless the profile isn't complete, in which case show enabled button so it's obvious you will need to save\r\n    this.dirty = !this.profileCompleted;\r\n  }\r\n\r\n  view() {\r\n    return (\r\n      <form class=\"ProfileConfigurePane\" onsubmit={this.update.bind(this)}>\r\n        {!!(this.enforceProfileCompletion && !this.profileCompleted) && (\r\n          <div class=\"Alert Alert--Error\">{app.translator.trans('fof-game.forum.alerts.profile-completion-required')}</div>\r\n        )}\r\n\r\n        <div class=\"Fields\">\r\n          {app.store\r\n            .all('game-field')\r\n            .sort((a, b) => a.sort() - b.sort())\r\n            .map((field) => {\r\n              return this.field(field);\r\n            })}\r\n        </div>\r\n\r\n        <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading} disabled={!this.dirty}>\r\n          {app.translator.trans('fof-game.forum.buttons.save-profile')}\r\n        </Button>\r\n\r\n        {!!this.profileNowCompleted && (\r\n          <span class=\"Game-NowCompleted\">\r\n            {app.translator.trans('fof-game.forum.alerts.profile-completed', {\r\n              a: <Link href={app.route('index')} />,\r\n            })}\r\n          </span>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  field(field) {\r\n    const type = TypeFactory.typeForField({\r\n      field,\r\n      set: this.set.bind(this, field),\r\n      value: this.answerValues[field.id()],\r\n    });\r\n\r\n    return type.editorField();\r\n  }\r\n\r\n  load() {\r\n    this.answers = this.user.gameAnswers();\r\n\r\n    if (this.answers === false) {\r\n      this.answers = [];\r\n      app.store.find('users', this.user.id(), { include: 'gameAnswers' }).then(() => {\r\n        this.answers = this.user.gameAnswers();\r\n        this.answerValues = {};\r\n\r\n        app.store.all('game-field').forEach((field) => {\r\n          const answer = this.answers.find((a) => a.field().id() === field.id());\r\n\r\n          this.answerValues[field.id()] = answer ? answer.content() : '';\r\n        });\r\n\r\n        this.loading = false;\r\n        m.redraw();\r\n      });\r\n    } else {\r\n      this.loading = false;\r\n\r\n      app.store.all('game-field').forEach((field) => {\r\n        const answer = this.answers.find((a) => a.field().id() === field.id());\r\n\r\n        this.answerValues[field.id()] = answer ? answer.content() : '';\r\n      });\r\n    }\r\n\r\n    m.redraw();\r\n  }\r\n\r\n  set(field, value) {\r\n    this.answerValues[field.id()] = value;\r\n    this.dirty = true;\r\n  }\r\n\r\n  update(e) {\r\n    e.preventDefault();\r\n\r\n    this.loading = true;\r\n\r\n    app\r\n      .request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/game/configure/' + this.user.id(),\r\n        body: this.answerValues,\r\n      })\r\n      .then((response) => {\r\n        this.dirty = false;\r\n\r\n        if (!this.profileCompleted) {\r\n          this.profileCompleted = true;\r\n          this.profileNowCompleted = true;\r\n        }\r\n\r\n        this.parseResponse(response);\r\n      })\r\n      .catch(() => {\r\n        this.loading = false;\r\n        m.redraw();\r\n      });\r\n  }\r\n\r\n  parseResponse(response) {\r\n    //console.log(response);\r\n    this.answers = app.store.pushPayload(response);\r\n    this.loading = false;\r\n    m.redraw();\r\n  }\r\n}\r\n","import UserPage from 'flarum/forum/components/UserPage';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport ProfilePane from './ProfilePane';\r\nimport ProfileConfigurePane from './ProfileConfigurePane';\r\n\r\nexport default class RootGamePane extends UserPage {\r\n  loading = true;\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.loadUser(m.route.param('username'));\r\n  }\r\n\r\n  pageContentComponent() {\r\n    if (!this.user) return null;\r\n    if (this.user.canEditGameProfile()) return <ProfileConfigurePane user={this.user} />;\r\n    else return <ProfilePane user={this.user} />;\r\n  }\r\n\r\n  show(user) {\r\n    super.show(user);\r\n\r\n    this.loading = false;\r\n    m.redraw();\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div class=\"MasqueradeRoot\">\r\n        {this.loading && <LoadingIndicator />}\r\n        {this.pageContentComponent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import app from 'flarum/forum/app';\r\nimport User from 'flarum/common/models/User';\r\nimport Field from './../lib/models/Field';\r\nimport Answer from './../lib/models/Answer';\r\nimport Model from 'flarum/common/Model';\r\n\r\nimport addProfilePane from './addProfilePane';\r\nimport mutateUserHero from './mutateUserHero';\r\n\r\n// Exports\r\nimport ProfileConfigurePane from './panes/ProfileConfigurePane';\r\nimport ProfilePane from './panes/ProfilePane';\r\nimport RootGamePane from './panes/RootGamePane';\r\nimport BaseField from './types/BaseField';\r\nimport BooleanField from './types/BooleanField';\r\nimport EmailField from './types/EmailField';\r\nimport SelectField from './types/SelectField';\r\nimport TypeFactory from './types/TypeFactory';\r\nimport UrlField from './types/UrlField';\r\nimport PasswordField from './types/PasswordField';\r\n\r\napp.initializers.add('fof-game', (app) => {\r\n  app.store.models['game-field'] = Field;\r\n  app.store.models['game-answer'] = Answer;\r\n\r\n  User.prototype.bioFields = Model.hasMany('bioFields');\r\n  User.prototype.gameAnswers = Model.hasMany('gameAnswers');\r\n  User.prototype.canEditGameProfile = Model.attribute('canEditGameProfile');\r\n\r\n  addProfilePane();\r\n\r\n  mutateUserHero();\r\n});\r\n\r\nconst components = {\r\n  ProfileConfigurePane,\r\n  ProfilePane,\r\n  RootGamePane,\r\n};\r\n\r\nconst types = {\r\n  BaseField,\r\n  BooleanField,\r\n  EmailField,\r\n  SelectField,\r\n  TypeFactory,\r\n  UrlField,\r\n  PasswordField,\r\n};\r\n\r\nexport { components, types };\r\n","import app from 'flarum/forum/app';\r\n\r\nimport { extend } from 'flarum/common/extend';\r\nimport LinkButton from 'flarum/common/components/LinkButton';\r\nimport UserPage from 'flarum/forum/components/UserPage';\r\nimport RootGamePane from './panes/RootGamePane';\r\n\r\nexport default function addProfilePane() {\r\n  app.routes['fof-game'] = {\r\n    path: '/u/:username/game',\r\n    resolver: {\r\n      onmatch() {\r\n        if (!app.forum.attribute('canViewGame')) throw new Error();\r\n\r\n        return RootGamePane;\r\n      },\r\n    },\r\n  };\r\n\r\n  extend(UserPage.prototype, 'navItems', function (items) {\r\n    if (app.forum.attribute('canViewGame') || this.user.canEditGameProfile()) {\r\n      const edit = this.user.canEditGameProfile();\r\n\r\n      items.add(\r\n        'game',\r\n        LinkButton.component(\r\n          {\r\n            href: app.route('fof-game', { username: this.user.slug() }),\r\n            icon: 'fas fa-gamepad ',\r\n            'data-editProfile': edit,\r\n          },\r\n          app.translator.trans(`fof-game.forum.buttons.${edit ? 'edit' : 'view'}-profile`)\r\n        ),\r\n        200\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\nimport app from 'flarum/forum/app';\r\nimport UserCard from 'flarum/forum/components/UserCard';\r\nimport TypeFactory from './types/TypeFactory';\r\n\r\nexport default function mutateUserHero() {\r\n  extend(UserCard.prototype, 'infoItems', function (items) {\r\n    const answers = app.forum.attribute('canViewGame') ? this.attrs.user.bioFields() || [] : [];\r\n\r\n    items.add(\r\n      'game-bio',\r\n      <div>\r\n        {answers.map((answer) => {\r\n          const field = answer.attribute('field');\r\n          const type = TypeFactory.typeForField({\r\n            field,\r\n            value: answer.content(),\r\n          });\r\n\r\n          return type.answerField();\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n}\r\n"],"sourceRoot":""}